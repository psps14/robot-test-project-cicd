name: Robot Tests CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * *"       # ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô 07:00 ‡∏ô.‡πÑ‡∏ó‡∏¢ (00:00 UTC)

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Google Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@v2

      - name: Run Robot tests (headless)
        env:
          DISPLAY: ":99"
        run: |
          Xvfb :99 -screen 0 1920x1080x24 >/dev/null 2>&1 &
          mkdir -p tests/results
          robot -d tests/results tests

      - name: Upload Robot reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-report
          path: tests/results/**
          if-no-files-found: warn
      - name: Build per-test table (MD + HTML)
        id: table
        run: |
          python - <<'PY'
          import xml.etree.ElementTree as ET, html, pathlib
          p = pathlib.Path("tests/results/output.xml")
          rows = []
          if p.exists():
              root = ET.parse(p).getroot()
              i = 1
              for t in root.iter("test"):
                  name = t.get("name")
                  status = t.find("status").get("status")
                  rows.append((i, name, status))
                  i += 1
          # Markdown
          md = ["| No. | Test Scenario | Test Status |",
                "|---:|---|:---:|"]
          for i,name,status in rows:
              md.append(f"| {i} | {name} | {'‚úÖ Passed' if status=='PASS' else '‚ùå Failed'} |")
          pathlib.Path("tests/results/summary.md").write_text("\n".join(md), encoding="utf-8")
          # HTML (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•)
          html_rows = ["<table border='1' cellspacing='0' cellpadding='6'>",
                       "<thead><tr><th>No.</th><th>Test Scenario</th><th>Test Status</th></tr></thead><tbody>"]
          for i,name,status in rows:
              sym = "‚úÖ Passed" if status=="PASS" else "‚ùå Failed"
              html_rows.append(f"<tr><td>{i}</td><td>{html.escape(name)}</td><td>{sym}</td></tr>")
          html_rows.append("</tbody></table>")
          pathlib.Path("tests/results/summary.html").write_text("\n".join(html_rows), encoding="utf-8")
          PY
          echo "md<<EOF" >> $GITHUB_OUTPUT
          cat tests/results/summary.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "html<<EOF" >> $GITHUB_OUTPUT
          cat tests/results/summary.html >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Append table to Job Summary
        if: always()
        run: |
          echo "### Test Case Status" >> $GITHUB_STEP_SUMMARY
          cat tests/results/summary.md >> $GITHUB_STEP_SUMMARY

      - name: Summary
        if: always()
        run: |
          echo "## Robot Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f tests/results/output.xml ]; then
            PASSED=$(grep -o 'pass="[0-9]\+"' tests/results/output.xml | head -1 | sed 's/[^0-9]*//g')
            FAILED=$(grep -o 'fail="[0-9]\+"' tests/results/output.xml | head -1 | sed 's/[^0-9]*//g')
            echo "- Passed: $PASSED  |  Failed: $FAILED" >> $GITHUB_STEP_SUMMARY
            echo "- Report & Log ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô artifact \`robot-report\`" >> $GITHUB_STEP_SUMMARY
          fi

      # ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏ö‡∏á‡∏≤‡∏ô (‡∏£‡∏ß‡∏°‡πÄ‡∏Ñ‡∏™ fail)
      - name: Send Email Report (Gmail SMTP)
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Robot Framework Test Results [Status: ${{ job.status }}]"
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_USERNAME }}
          html_body: |
            <h3>Robot Framework Daily Report</h3>
            <p>üìã Status : <b>${{ job.status }}</b></p>
            <p>üîó GitHub Actions Log : <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Action Run Link</a></p>
            <h4>Per-test Status</h4>
            ${{ steps.table.outputs.html }}
            <p>Please see attached below</p>
          attachments: |
            tests/results/report.html
            tests/results/log.html
            tests/results/output.xml
